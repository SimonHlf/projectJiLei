<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.windy.module.examination.dao.DisRelationshipMapper" >
  <resultMap id="BaseResultMap" type="cn.windy.module.examination.mybatis.model.DisRelationship" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="mark" property="mark" jdbcType="INTEGER" />
    <result column="p_mark" property="pMark" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="ship_describe" property="shipDescribe" jdbcType="VARCHAR" />
    <result column="arrt0" property="arrt0" jdbcType="VARCHAR" />
    <result column="arrt1" property="arrt1" jdbcType="VARCHAR" />
    <result column="arrt2" property="arrt2" jdbcType="VARCHAR" />
    <result column="arrt3" property="arrt3" jdbcType="VARCHAR" />
    <result column="arrt4" property="arrt4" jdbcType="VARCHAR" />
    <result column="arrt5" property="arrt5" jdbcType="VARCHAR" />
    <result column="arrt6" property="arrt6" jdbcType="VARCHAR" />
    <result column="arrt7" property="arrt7" jdbcType="VARCHAR" />
    <result column="arrt8" property="arrt8" jdbcType="VARCHAR" />
    <result column="arrt9" property="arrt9" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, mark, p_mark, name, type, ship_describe, arrt0, arrt1, arrt2, arrt3, 
    arrt4, arrt5, arrt6, arrt7, arrt8, arrt9
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.windy.module.examination.mybatis.model.DisRelationshipQuery" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dis_relationship
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.windy.module.examination.mybatis.model.DisRelationshipQuery" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dis_relationship
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="cn.windy.module.examination.mybatis.model.DisRelationship" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dis_relationship
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="pMark != null" >
        p_mark,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="shipDescribe != null" >
        ship_describe,
      </if>
      <if test="arrt0 != null" >
        arrt0,
      </if>
      <if test="arrt1 != null" >
        arrt1,
      </if>
      <if test="arrt2 != null" >
        arrt2,
      </if>
      <if test="arrt3 != null" >
        arrt3,
      </if>
      <if test="arrt4 != null" >
        arrt4,
      </if>
      <if test="arrt5 != null" >
        arrt5,
      </if>
      <if test="arrt6 != null" >
        arrt6,
      </if>
      <if test="arrt7 != null" >
        arrt7,
      </if>
      <if test="arrt8 != null" >
        arrt8,
      </if>
      <if test="arrt9 != null" >
        arrt9,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=INTEGER},
      </if>
      <if test="pMark != null" >
        #{pMark,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="shipDescribe != null" >
        #{shipDescribe,jdbcType=VARCHAR},
      </if>
      <if test="arrt0 != null" >
        #{arrt0,jdbcType=VARCHAR},
      </if>
      <if test="arrt1 != null" >
        #{arrt1,jdbcType=VARCHAR},
      </if>
      <if test="arrt2 != null" >
        #{arrt2,jdbcType=VARCHAR},
      </if>
      <if test="arrt3 != null" >
        #{arrt3,jdbcType=VARCHAR},
      </if>
      <if test="arrt4 != null" >
        #{arrt4,jdbcType=VARCHAR},
      </if>
      <if test="arrt5 != null" >
        #{arrt5,jdbcType=VARCHAR},
      </if>
      <if test="arrt6 != null" >
        #{arrt6,jdbcType=VARCHAR},
      </if>
      <if test="arrt7 != null" >
        #{arrt7,jdbcType=VARCHAR},
      </if>
      <if test="arrt8 != null" >
        #{arrt8,jdbcType=VARCHAR},
      </if>
      <if test="arrt9 != null" >
        #{arrt9,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.windy.module.examination.mybatis.model.DisRelationshipQuery" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from dis_relationship
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dis_relationship
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.mark != null" >
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
      <if test="record.pMark != null" >
        p_mark = #{record.pMark,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.shipDescribe != null" >
        ship_describe = #{record.shipDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt0 != null" >
        arrt0 = #{record.arrt0,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt1 != null" >
        arrt1 = #{record.arrt1,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt2 != null" >
        arrt2 = #{record.arrt2,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt3 != null" >
        arrt3 = #{record.arrt3,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt4 != null" >
        arrt4 = #{record.arrt4,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt5 != null" >
        arrt5 = #{record.arrt5,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt6 != null" >
        arrt6 = #{record.arrt6,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt7 != null" >
        arrt7 = #{record.arrt7,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt8 != null" >
        arrt8 = #{record.arrt8,jdbcType=VARCHAR},
      </if>
      <if test="record.arrt9 != null" >
        arrt9 = #{record.arrt9,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dis_relationship
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      mark = #{record.mark,jdbcType=INTEGER},
      p_mark = #{record.pMark,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      ship_describe = #{record.shipDescribe,jdbcType=VARCHAR},
      arrt0 = #{record.arrt0,jdbcType=VARCHAR},
      arrt1 = #{record.arrt1,jdbcType=VARCHAR},
      arrt2 = #{record.arrt2,jdbcType=VARCHAR},
      arrt3 = #{record.arrt3,jdbcType=VARCHAR},
      arrt4 = #{record.arrt4,jdbcType=VARCHAR},
      arrt5 = #{record.arrt5,jdbcType=VARCHAR},
      arrt6 = #{record.arrt6,jdbcType=VARCHAR},
      arrt7 = #{record.arrt7,jdbcType=VARCHAR},
      arrt8 = #{record.arrt8,jdbcType=VARCHAR},
      arrt9 = #{record.arrt9,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.windy.module.examination.mybatis.model.DisRelationship" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dis_relationship
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=INTEGER},
      </if>
      <if test="pMark != null" >
        p_mark = #{pMark,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="shipDescribe != null" >
        ship_describe = #{shipDescribe,jdbcType=VARCHAR},
      </if>
      <if test="arrt0 != null" >
        arrt0 = #{arrt0,jdbcType=VARCHAR},
      </if>
      <if test="arrt1 != null" >
        arrt1 = #{arrt1,jdbcType=VARCHAR},
      </if>
      <if test="arrt2 != null" >
        arrt2 = #{arrt2,jdbcType=VARCHAR},
      </if>
      <if test="arrt3 != null" >
        arrt3 = #{arrt3,jdbcType=VARCHAR},
      </if>
      <if test="arrt4 != null" >
        arrt4 = #{arrt4,jdbcType=VARCHAR},
      </if>
      <if test="arrt5 != null" >
        arrt5 = #{arrt5,jdbcType=VARCHAR},
      </if>
      <if test="arrt6 != null" >
        arrt6 = #{arrt6,jdbcType=VARCHAR},
      </if>
      <if test="arrt7 != null" >
        arrt7 = #{arrt7,jdbcType=VARCHAR},
      </if>
      <if test="arrt8 != null" >
        arrt8 = #{arrt8,jdbcType=VARCHAR},
      </if>
      <if test="arrt9 != null" >
        arrt9 = #{arrt9,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 分销关系列表 -->
  <select id="findAll" resultType="java.util.Map">
      SELECT dr.*,
         frt.nick_name thisNickName,
         IFNULL(frs.nick_name,
        '没有上级') sNickName
      FROM dis_relationship dr
      LEFT JOIN front_user frt
      ON dr.user_id = frt.user_id
      LEFT JOIN front_user frs
      ON dr.p_mark = frs.user_id LIMIT #{start}, #{end}
  </select>

  <!-- 获取用户上级 -->
  <select id="findCurrentUser" resultType="java.util.Map">
      SELECT dr.*,frt.nick_name thisNickName,IFNULL(frs.nick_name,'没有上级') sNickName
      FROM dis_relationship dr LEFT JOIN front_user frt
      ON dr.user_id = frt.user_id LEFT JOIN front_user frs
      ON dr.p_mark = frs.user_id WHERE dr.user_id = #{userId}
  </select>

  <!-- 获取用户下级 -->
  <select id="findSubordinate" resultType="java.util.Map">
      SELECT dr.*,frt.nick_name thisNickName,IFNULL(frs.nick_name,'没有上级') sNickName
      FROM dis_relationship dr LEFT JOIN front_user frt
      ON dr.user_id = frt.user_id LEFT JOIN front_user frs
      ON dr.p_mark = frs.user_id WHERE dr.p_mark = #{pmark}
      LIMIT #{start},#{end}
  </select>

</mapper>