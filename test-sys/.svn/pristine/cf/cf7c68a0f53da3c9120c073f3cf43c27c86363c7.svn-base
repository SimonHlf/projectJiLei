package cn.windy.module.examination.dao;

import cn.windy.module.examination.mybatis.model.DisRelationship;
import cn.windy.module.examination.mybatis.model.DisRelationshipQuery;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface DisRelationshipMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    int countByExample(DisRelationshipQuery example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    int deleteByExample(DisRelationshipQuery example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    @Delete({
        "delete from dis_relationship",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    @Insert({
        "insert into dis_relationship (id, user_id, ",
        "mark, p_mark, name, ",
        "type, ship_describe, ",
        "arrt0, arrt1, arrt2, ",
        "arrt3, arrt4, arrt5, ",
        "arrt6, arrt7, arrt8, ",
        "arrt9)",
        "values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, ",
        "#{mark,jdbcType=INTEGER}, #{pMark,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=INTEGER}, #{shipDescribe,jdbcType=VARCHAR}, ",
        "#{arrt0,jdbcType=VARCHAR}, #{arrt1,jdbcType=VARCHAR}, #{arrt2,jdbcType=VARCHAR}, ",
        "#{arrt3,jdbcType=VARCHAR}, #{arrt4,jdbcType=VARCHAR}, #{arrt5,jdbcType=VARCHAR}, ",
        "#{arrt6,jdbcType=VARCHAR}, #{arrt7,jdbcType=VARCHAR}, #{arrt8,jdbcType=VARCHAR}, ",
        "#{arrt9,jdbcType=VARCHAR})"
    })
    int insert(DisRelationship record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    int insertSelective(DisRelationship record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    List<DisRelationship> selectByExample(DisRelationshipQuery example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, user_id, mark, p_mark, name, type, ship_describe, arrt0, arrt1, arrt2, arrt3, ",
        "arrt4, arrt5, arrt6, arrt7, arrt8, arrt9",
        "from dis_relationship",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    DisRelationship selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") DisRelationship record, @Param("example") DisRelationshipQuery example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") DisRelationship record, @Param("example") DisRelationshipQuery example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(DisRelationship record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dis_relationship
     *
     * @mbggenerated
     */
    @Update({
        "update dis_relationship",
        "set user_id = #{userId,jdbcType=BIGINT},",
          "mark = #{mark,jdbcType=INTEGER},",
          "p_mark = #{pMark,jdbcType=INTEGER},",
          "name = #{name,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=INTEGER},",
          "ship_describe = #{shipDescribe,jdbcType=VARCHAR},",
          "arrt0 = #{arrt0,jdbcType=VARCHAR},",
          "arrt1 = #{arrt1,jdbcType=VARCHAR},",
          "arrt2 = #{arrt2,jdbcType=VARCHAR},",
          "arrt3 = #{arrt3,jdbcType=VARCHAR},",
          "arrt4 = #{arrt4,jdbcType=VARCHAR},",
          "arrt5 = #{arrt5,jdbcType=VARCHAR},",
          "arrt6 = #{arrt6,jdbcType=VARCHAR},",
          "arrt7 = #{arrt7,jdbcType=VARCHAR},",
          "arrt8 = #{arrt8,jdbcType=VARCHAR},",
          "arrt9 = #{arrt9,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(DisRelationship record);


    /**
     * 分销列表
     */
    List<Map<String,Object>> findAll(@Param("start") int start,@Param("end") int end);

    /**
     *获取用户上级
     * @return
     */
    List<Map<String,Object>> findCurrentUser(@Param("userId")long userId);

    /**
     * 分销下级
     */
    List<Map<String,Object>> findSubordinate(@Param("pmark")long pmark,@Param("start") int start,@Param("end") int end);

}