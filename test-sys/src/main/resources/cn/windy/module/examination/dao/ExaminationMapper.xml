<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.windy.module.examination.dao.ExaminationMapper" >
  <resultMap id="BaseResultMap" type="cn.windy.module.examination.mybatis.model.Examination" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="exam_name" property="examName" jdbcType="VARCHAR" />
    <result column="creat_id" property="creatId" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="sh_people" property="shPeople" jdbcType="INTEGER" />
    <result column="ac_people" property="acPeople" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="founder" property="founder" jdbcType="BIGINT" />
    <result column="exam_status" property="examStatus" jdbcType="INTEGER" />
    <result column="attr0" property="attr0" jdbcType="VARCHAR" />
    <result column="attr1" property="attr1" jdbcType="VARCHAR" />
    <result column="attr2" property="attr2" jdbcType="VARCHAR" />
    <result column="attr3" property="attr3" jdbcType="VARCHAR" />
    <result column="attr4" property="attr4" jdbcType="VARCHAR" />
    <result column="attr5" property="attr5" jdbcType="VARCHAR" />
    <result column="attr6" property="attr6" jdbcType="INTEGER" />
    <result column="attr7" property="attr7" jdbcType="INTEGER" />
    <result column="attr8" property="attr8" jdbcType="BIGINT" />
    <result column="attr9" property="attr9" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, exam_name, creat_id, org_id, start_time, end_time, sh_people, ac_people, create_time, 
    founder, exam_status, attr0, attr1, attr2, attr3, attr4, attr5, attr6, attr7, attr8, 
    attr9
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.windy.module.examination.mybatis.model.ExaminationQuery" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examination
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.windy.module.examination.mybatis.model.ExaminationQuery" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from examination
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="cn.windy.module.examination.mybatis.model.Examination" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into examination
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="examName != null" >
        exam_name,
      </if>
      <if test="creatId != null" >
        creat_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="shPeople != null" >
        sh_people,
      </if>
      <if test="acPeople != null" >
        ac_people,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="founder != null" >
        founder,
      </if>
      <if test="examStatus != null" >
        exam_status,
      </if>
      <if test="attr0 != null" >
        attr0,
      </if>
      <if test="attr1 != null" >
        attr1,
      </if>
      <if test="attr2 != null" >
        attr2,
      </if>
      <if test="attr3 != null" >
        attr3,
      </if>
      <if test="attr4 != null" >
        attr4,
      </if>
      <if test="attr5 != null" >
        attr5,
      </if>
      <if test="attr6 != null" >
        attr6,
      </if>
      <if test="attr7 != null" >
        attr7,
      </if>
      <if test="attr8 != null" >
        attr8,
      </if>
      <if test="attr9 != null" >
        attr9,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="examName != null" >
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="creatId != null" >
        #{creatId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="shPeople != null" >
        #{shPeople,jdbcType=INTEGER},
      </if>
      <if test="acPeople != null" >
        #{acPeople,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="founder != null" >
        #{founder,jdbcType=BIGINT},
      </if>
      <if test="examStatus != null" >
        #{examStatus,jdbcType=INTEGER},
      </if>
      <if test="attr0 != null" >
        #{attr0,jdbcType=VARCHAR},
      </if>
      <if test="attr1 != null" >
        #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        #{attr3,jdbcType=VARCHAR},
      </if>
      <if test="attr4 != null" >
        #{attr4,jdbcType=VARCHAR},
      </if>
      <if test="attr5 != null" >
        #{attr5,jdbcType=VARCHAR},
      </if>
      <if test="attr6 != null" >
        #{attr6,jdbcType=INTEGER},
      </if>
      <if test="attr7 != null" >
        #{attr7,jdbcType=INTEGER},
      </if>
      <if test="attr8 != null" >
        #{attr8,jdbcType=BIGINT},
      </if>
      <if test="attr9 != null" >
        #{attr9,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.windy.module.examination.mybatis.model.ExaminationQuery" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from examination
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.examName != null" >
        exam_name = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.creatId != null" >
        creat_id = #{record.creatId,jdbcType=BIGINT},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.shPeople != null" >
        sh_people = #{record.shPeople,jdbcType=INTEGER},
      </if>
      <if test="record.acPeople != null" >
        ac_people = #{record.acPeople,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.founder != null" >
        founder = #{record.founder,jdbcType=BIGINT},
      </if>
      <if test="record.examStatus != null" >
        exam_status = #{record.examStatus,jdbcType=INTEGER},
      </if>
      <if test="record.attr0 != null" >
        attr0 = #{record.attr0,jdbcType=VARCHAR},
      </if>
      <if test="record.attr1 != null" >
        attr1 = #{record.attr1,jdbcType=VARCHAR},
      </if>
      <if test="record.attr2 != null" >
        attr2 = #{record.attr2,jdbcType=VARCHAR},
      </if>
      <if test="record.attr3 != null" >
        attr3 = #{record.attr3,jdbcType=VARCHAR},
      </if>
      <if test="record.attr4 != null" >
        attr4 = #{record.attr4,jdbcType=VARCHAR},
      </if>
      <if test="record.attr5 != null" >
        attr5 = #{record.attr5,jdbcType=VARCHAR},
      </if>
      <if test="record.attr6 != null" >
        attr6 = #{record.attr6,jdbcType=INTEGER},
      </if>
      <if test="record.attr7 != null" >
        attr7 = #{record.attr7,jdbcType=INTEGER},
      </if>
      <if test="record.attr8 != null" >
        attr8 = #{record.attr8,jdbcType=BIGINT},
      </if>
      <if test="record.attr9 != null" >
        attr9 = #{record.attr9,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination
    set id = #{record.id,jdbcType=BIGINT},
      exam_name = #{record.examName,jdbcType=VARCHAR},
      creat_id = #{record.creatId,jdbcType=BIGINT},
      org_id = #{record.orgId,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      sh_people = #{record.shPeople,jdbcType=INTEGER},
      ac_people = #{record.acPeople,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      founder = #{record.founder,jdbcType=BIGINT},
      exam_status = #{record.examStatus,jdbcType=INTEGER},
      attr0 = #{record.attr0,jdbcType=VARCHAR},
      attr1 = #{record.attr1,jdbcType=VARCHAR},
      attr2 = #{record.attr2,jdbcType=VARCHAR},
      attr3 = #{record.attr3,jdbcType=VARCHAR},
      attr4 = #{record.attr4,jdbcType=VARCHAR},
      attr5 = #{record.attr5,jdbcType=VARCHAR},
      attr6 = #{record.attr6,jdbcType=INTEGER},
      attr7 = #{record.attr7,jdbcType=INTEGER},
      attr8 = #{record.attr8,jdbcType=BIGINT},
      attr9 = #{record.attr9,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.windy.module.examination.mybatis.model.Examination" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination
    <set >
      <if test="examName != null" >
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="creatId != null" >
        creat_id = #{creatId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="shPeople != null" >
        sh_people = #{shPeople,jdbcType=INTEGER},
      </if>
      <if test="acPeople != null" >
        ac_people = #{acPeople,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="founder != null" >
        founder = #{founder,jdbcType=BIGINT},
      </if>
      <if test="examStatus != null" >
        exam_status = #{examStatus,jdbcType=INTEGER},
      </if>
      <if test="attr0 != null" >
        attr0 = #{attr0,jdbcType=VARCHAR},
      </if>
      <if test="attr1 != null" >
        attr1 = #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        attr2 = #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        attr3 = #{attr3,jdbcType=VARCHAR},
      </if>
      <if test="attr4 != null" >
        attr4 = #{attr4,jdbcType=VARCHAR},
      </if>
      <if test="attr5 != null" >
        attr5 = #{attr5,jdbcType=VARCHAR},
      </if>
      <if test="attr6 != null" >
        attr6 = #{attr6,jdbcType=INTEGER},
      </if>
      <if test="attr7 != null" >
        attr7 = #{attr7,jdbcType=INTEGER},
      </if>
      <if test="attr8 != null" >
        attr8 = #{attr8,jdbcType=BIGINT},
      </if>
      <if test="attr9 != null" >
        attr9 = #{attr9,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 后台考试管理列表 -->
  <select id="findAll" resultType="java.util.Map">
    SELECT
    <choose>
      <when test="end != 0">
        DISTINCT ex.*,pc.name creatName,wo.name orgName,IFNULL(epCount.TotalNumber,0) TotalNumber,IFNULL(prCount.ActualTOTAL,0) ActualTOTAL
      </when>
      <otherwise>
        COUNT(DISTINCT ex.id) TOTAL
      </otherwise>
    </choose>
    FROM examination ex
    LEFT JOIN paper_creat pc ON ex.creat_id = pc.id
    LEFT JOIN exam_personnel ep ON ex.id = ep.exam_id
    LEFT JOIN windy_org wo ON ex.org_id = wo.id
    LEFT JOIN (SELECT COUNT(*) TotalNumber,ep.exam_id FROM exam_personnel ep GROUP BY ep.exam_id) epCount
    ON ex.id = epCount.exam_id
    LEFT JOIN (SELECT COUNT(a.userId) ActualTOTAL,a.attr10 FROM (SELECT DISTINCT pr.userId,pr.attr10 FROM paper_record pr) a GROUP BY a.attr10) prCount
    ON ex.id = prCount.attr10
    WHERE 1=1
    <if test="orgId != null and orgId != ''">
      AND ex.org_id = #{orgId}
    </if>
    <if test="examName != null and examName != ''">
      AND ex.exam_name LIKE '%${examName}%'
    </if>
    ORDER BY ex.id DESC
    <if test="end != 0">
      LIMIT #{start},#{end}
    </if>
  </select>

  <!-- 前端即将开始的考试 -->
  <select id="findWebExamination" resultType="java.util.Map">
    SELECT
    <choose>
      <when test="end != 0">
        ex.*,pc.name creatName,IFNULL(ps.exam_time,100) setExamTime
      </when>
      <otherwise>
        COUNT(*) TOTAL
      </otherwise>
    </choose>
     FROM examination ex LEFT JOIN paper_creat pc
     ON ex.creat_id = pc.id
     LEFT JOIN paper_set ps ON ps.paper_id = pc.id
     WHERE 1=1 AND ex.org_id = 3
     <if test="end != 0">
       LIMIT #{start},#{end}
     </if>
  </select>


  <!-- 考试管理点击ztree 添加 加载考生列表 -->
  <select id="addfrontUserTable" resultType="java.util.Map">
  SELECT fu.*,wo.name orgName FROM front_user fu LEFT JOIN windy_org wo
  ON fu.org_id = wo.id
  WHERE fu.org_id = #{orgId}
  </select>

  <select id="updatefrontUserTable" resultType="java.util.Map">
  SELECT fu.*,wo.name orgName,IFNULL(ep.exam_id,0)isCheckd FROM front_user fu LEFT JOIN windy_org wo
  ON fu.org_id = wo.id LEFT JOIN exam_personnel ep
  ON fu.user_id = ep.user_id AND ep.exam_id = #{examId}
  WHERE fu.org_id = #{orgId}
  </select>

  <!-- 考试详情 -->
  <select id="Examdetails" resultType="java.util.Map">
    SELECT ex.*,pc.name creatName,wo.name orgName,pc.sets FROM examination ex LEFT JOIN paper_creat pc
    on ex.creat_id = pc.id LEFT JOIN windy_org wo ON ex.org_id = wo.id WHERE ex.id = #{examId}
  </select>


  <select id="checkExamSecond" resultType="java.util.Map">
    SELECT up.*,ps.exam_use FROM examination ex
    LEFT JOIN paper_set ps ON ex.creat_id = ps.paper_id
    LEFT JOIN user_papercreat up ON ex.id = up.paperCreatId
    WHERE up.userId = #{userId} AND up.paperCreatId = #{examId}
  </select>


</mapper>